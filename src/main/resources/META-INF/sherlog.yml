preferences:
  default-fallback-mode: append
  show-added-entries:    false
  remove-ansi-colors:    true

models:
  java:
    format: '{@exception}{#$source}:{$line} {#timestamp} {#level|-5} {#category} {#thread} {#message}'
    attributes:
      timestamp:
        env:      SHERLOG_MODEL_JAVA_TIMESTAMP
        property: sherlog.model.java.timestamp
        value:    datetime | yyyy-MM-dd HH:mm:ss,SSS
      level:
        env:      SHERLOG_MODEL_JAVA_LEVEL
        property: sherlog.model.java.level
        value:    enum | TRACE,DEBUG,INFO,WARN,WARNING,ERROR,SEVERE,FATAL
      category:
        env:      SHERLOG_MODEL_JAVA_CATEGORY
        property: sherlog.model.java.category
        value:    text
      thread:
        env:      SHERLOG_MODEL_JAVA_THREAD
        property: sherlog.model.java.thread
        value:    text
      exception:
        env:      SHERLOG_MODEL_JAVA_EXCEPTION
        property: sherlog.model.java.exception
        value:    text[]
      message:
        env:      SHERLOG_MODEL_JAVA_MESSAGE
        property: sherlog.model.java.message
        value:    text

index:
  - level
  - category
  - thread
  - exception

readers:
  file:
    type:    file
    charset: UTF-8

  socket:
    type:    socket
    charset: UTF-8

parsers:
  infinispan:
    type:    regex
    pattern: '{{timestamp}} {{level}}\s+{{thread}} {{category}} {{message}}'

  java:
    type: regex
    pattern:
      env:      SHERLOG_PARSER_JAVA_PATTERN
      property: sherlog.parser.java.pattern
      value:    '{{timestamp}} {{level}}\s+{{category}} {{thread}} {{message}}'

mappers:
  java:
    type: function
    copy: timestamp,level,category,thread,message

patterns:
  timestamp:
    env:      SHERLOG_PATTERN_TIMESTAMP
    property: sherlog.pattern.timestamp
    value:    '(?<timestamp>\d{2,4}-\d{2}-\d{2,4} \d{2}:\d{2}:\d{2},\d{3})'
  level:
    env:      SHERLOG_PATTERN_LEVEL
    property: sherlog.pattern.level
    value:    '(?<level>\w+)'
  category:
    env:      SHERLOG_PATTERN_CATEGORY
    property: sherlog.pattern.category
    value:    '\[(?<category>[^]]+)]'
  thread:
    env:      SHERLOG_PATTERN_THREAD
    property: sherlog.pattern.thread
    value:    '\((?<thread>[^)]+)\)'
  message:
    env:      SHERLOG_PATTERN_MESSAGE
    property: sherlog.pattern.message
    value:    '(?<message>.+)'

steps:
  java:
    - when: level >= WARN
      map:
        from:  message
        regex: '(?<exception>\w+(\.\w+)+(Exception|Error))'

pipelines:
  infinispan:
    model:  java
    parser: infinispan
    mapper: java
    steps:  java

exporters:
  json:
    type:       json
    attributes: timestamp,level,category,thread,message

icons:
  attribute-timestamp: ""
  attribute-level:     "󰒢"
  attribute-category:  "󰓹"
  attribute-thread:    "󰓁"
  attribute-message:   "󰍧"
  attribute-exception: ""

styles:
  attribute-timestamp:   grey//i

  attribute-level-TRACE: cyan
  attribute-level-DEBUG: cyan
  attribute-level-INFO:  orange
  attribute-level-WARN:  yellow
  attribute-level-ERROR: red//b
  attribute-level-FATAL: red//b

  attribute-category:    blue
  attribute-thread:      grey
  attribute-message:     white
  attribute-exception:   red
